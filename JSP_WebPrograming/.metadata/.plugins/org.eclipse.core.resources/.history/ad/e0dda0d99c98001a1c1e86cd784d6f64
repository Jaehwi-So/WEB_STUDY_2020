<%@page import="vo.DeptVO"%>
<%@page import="java.util.ArrayList"%>
<%@page import="java.util.List"%>
<%@page import="java.sql.ResultSet"%>
<%@page import="java.sql.PreparedStatement"%>
<%@page import="java.sql.Connection"%>
<%@page import="javax.sql.DataSource"%>
<%@page import="javax.naming.Context"%>
<%@page import="javax.naming.InitialContext"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<% 
	//톰캣이 참조할 리소스 검색
	InitialContext ic = new InitialContext();	
	//리소스파일(context)의 위치 검색
	Context ctx = (Context)ic.lookup("java:comp/env"); //javax.naming패키지에서 import, context 검색
	//리소스의 name을 통해 사용하고자 하는 자원을 검색
	DataSource dataSource = (DataSource)ctx.lookup("jdbc/oracle_test");	//javax.sql로 import
	//DB 연결하기
	Connection conn = dataSource.getConnection(); //java.sql로 import
	System.out.println("---DB 연결 성공---");
	
	/*
	String sql = "SELECT * FROM DEPT";
	//pstmt를 통해 현재 연결된 DB에 SQL쿼리를 수행함. 
	PreparedStatement pstmt = conn.prepareStatement(sql);
	//결과를 ResultSet이 받는다. 
	ResultSet rs = pstmt.executeQuery();	
	
	
	//dept_list에 DB의 데이터를 저장한다.
	List<DeptVO> dept_list = new ArrayList<>();
	while(rs.next()){	//rs.next() 수행시 다음 행을 탐색한다. 
		DeptVO vo = new DeptVO();	//부서 VO 생성
		//현재 컬럼값을 vo에 담는다.
		vo.setDeptNO(rs.getInt("DEPTNO"));	//DEPTNO 컬럼에 있는 값을 가져옴	
		vo.setdName(rs.getString("DNAME"));	//DNAME 컬럼에 있는 값을 가져옴	
		vo.setLoc(rs.getString("LOC"));	//LOC 컬럼에 있는 값을 가져옴	
		dept_list.add(vo);
	}
	
	*/
	//DB의 사용이 끝나면 스트림 해제, 연결해제 / 역순으로 닫기.
	rs.close();
	pstmt.close();
	conn.close();
	
%> 
<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8">
		<title>데이터베이스에서 값 받아오기.</title>
	</head>
	<body>
		<table border = "1">
		<tr>
			<th>사원번호</th>
			<th>부서명</th>
			<th>부서위치</th>
		</tr>
		<% for(int i = 0; i < dept_list.size(); i++){ %>
		<tr>
			<td><%= dept_list.get(i).getDeptNO() %></td>
			<td><%= dept_list.get(i).getdName() %></td>
			<td class = "td3"><%= dept_list.get(i).getLoc() %></td>
		</tr>		
		<% } %>	
		</table>
	</body>
</html>