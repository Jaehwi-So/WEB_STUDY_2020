<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="_insert_update_delete">	public int insert_update_delete(${argType} vo) {&#13;
		// TODO Auto-generated method stub&#13;
		int res = 0;&#13;
		&#13;
		Connection conn = null;&#13;
		PreparedStatement pstmt = null;&#13;
		&#13;
		String sql ="";&#13;
		&#13;
		try {&#13;
			//1.Connection획득&#13;
			conn = DBService.getInstance().getConnection();&#13;
			//2.명령처리객체 획득&#13;
			pstmt = conn.prepareStatement(sql);&#13;
			&#13;
			//3.pstmt parameter 채우기&#13;
			&#13;
			&#13;
			//4.DB로 전송(res:처리된행수)&#13;
			res = pstmt.executeUpdate();&#13;
			&#13;
			&#13;
		} catch (Exception e) {&#13;
			// TODO: handle exception&#13;
			e.printStackTrace();&#13;
		} finally{&#13;
			&#13;
			try {&#13;
				if(pstmt!=null) pstmt.close();&#13;
				if(conn!=null) conn.close();&#13;
			} catch (SQLException e) {&#13;
				// TODO Auto-generated catch block&#13;
				e.printStackTrace();&#13;
			}&#13;
		}&#13;
		return res;&#13;
	}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="_select_list">	public List&lt;${argType}&gt;  selectList(){&#13;
&#13;
		List&lt;${argType}&gt; list = new ArrayList&lt;${argType}&gt;();&#13;
		Connection conn = null;&#13;
		PreparedStatement pstmt = null;&#13;
		ResultSet  rs = null;&#13;
		String  sql = "";&#13;
		&#13;
		try {&#13;
			//1.Connection얻어온다&#13;
			conn = DBService.getInstance().getConnection();&#13;
			//2.명령처리객체정보를 얻어오기&#13;
			pstmt = conn.prepareStatement(sql);&#13;
			&#13;
			//3.결과행 처리객체 얻어오기&#13;
			rs = pstmt.executeQuery();&#13;
			&#13;
			while(rs.next()){&#13;
				${argType} vo = new ${argType}();&#13;
				//현재레코드값=&gt;Vo저장&#13;
&#13;
								&#13;
				//ArrayList추가&#13;
				list.add(vo);&#13;
			}&#13;
			&#13;
		} catch (Exception e) {&#13;
			// TODO: handle exception&#13;
			e.printStackTrace();&#13;
		} finally {&#13;
			&#13;
			try {&#13;
				if(rs!=null) rs.close();&#13;
				if(pstmt!=null)pstmt.close();&#13;
				if(conn!=null)conn.close();&#13;
			} catch (SQLException e) {&#13;
				// TODO Auto-generated catch block&#13;
				e.printStackTrace();&#13;
			}&#13;
		}&#13;
		&#13;
		return list;&#13;
	}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="_select_one">	public ${argType}  selectOne(int idx){&#13;
&#13;
		${argType} vo = null;&#13;
&#13;
		Connection conn = null;&#13;
		PreparedStatement pstmt = null;&#13;
		ResultSet  rs = null;&#13;
		String  sql = "";&#13;
		&#13;
		try {&#13;
			//1.Connection얻어온다&#13;
			conn = DBService.getInstance().getConnection();&#13;
			//2.명령처리객체정보를 얻어오기&#13;
			pstmt = conn.prepareStatement(sql);&#13;
            &#13;
            //3.pstmt parameter 설정&#13;
&#13;
			//4.결과행 처리객체 얻어오기&#13;
			rs = pstmt.executeQuery();&#13;
			&#13;
			if(rs.next()){&#13;
				vo = new ${argType}();&#13;
				//현재레코드값=&gt;Vo저장&#13;
				&#13;
			}&#13;
			&#13;
		} catch (Exception e) {&#13;
			// TODO: handle exception&#13;
			e.printStackTrace();&#13;
		} finally {&#13;
			&#13;
			try {&#13;
				if(rs!=null) rs.close();&#13;
				if(pstmt!=null)pstmt.close();&#13;
				if(conn!=null)conn.close();&#13;
			} catch (SQLException e) {&#13;
				// TODO Auto-generated catch block&#13;
				e.printStackTrace();&#13;
			}&#13;
		}&#13;
		&#13;
		return vo;&#13;
	}</template><template autoinsert="true" context="java" deleted="false" description="" enabled="true" name="_singleton">    // single-ton pattern: &#13;
	// 객체1개만생성해서 지속적으로 서비스하자&#13;
	static ${primary_type_name} single=null;&#13;
	public static ${primary_type_name} getInstance(){&#13;
		//생성되지 않았으면 생성&#13;
		if(single==null)&#13;
			single = new ${primary_type_name}();&#13;
		//생성된 객체정보를 반환&#13;
		return single;&#13;
	}</template></templates>