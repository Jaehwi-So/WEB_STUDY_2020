<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<!-- 0. 맨 처음 클라이언트 web.xml에서 클라이언트의 요청을 핸들링
	web.xml : 웹 프로젝트의 배치 기술서. 프로젝트가 실행되면 맨 처음 web.xml을 읽어들임-->
	
	<!-- 2. 객체를 생성하기 위해서 스프링의 환경설정 파일인 root-context.xml을 참조하여 생성된다. -->
	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/root-context.xml</param-value>
	</context-param>
	<!-- 1. context라는 참조파일들을 가져와 객체를 생성하기 위해 ContextLoader을 찾는다.(Listener실행) 
	이를 통해 루트 컨텍스트에 정의되어 있는 것들을 모든 서블릿과 필터가 공유할 수 있게 해준다.-->
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 3. 서블릿 설정. Spring에 내장된 DispatcherServlet을 호출. 
	이는 앞단에서 웹 어플리케이션의 요청정보를 가로채 적절한 컨트롤러에 핸들링 해준다.
	이는 servlet-context.xml을 참조한다. -->
	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name> 
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

</web-app>
