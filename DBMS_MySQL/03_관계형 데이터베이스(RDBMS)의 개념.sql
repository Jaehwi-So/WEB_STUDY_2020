-- # 관계형 데이터베이스(relational database)

-- 관계형 데이터베이스는 테이블로 이루어져 있으며, 이 테이블은 Key와 Value의 관계로 구성된다.
-- 데이터의 종속성을 관계(relationship)로 표현하는 것이 RDBMS의 특징

-- # 관계형 데이터베이스의 특징

-- 1) 데이터의 분류, 정렬, 탐색 속도가 빠르다.
-- 2) 데이터의 신뢰성과 무결성을 보장한다.
-- 3) 기존에 작성된 스키마를 수정하기가 어렵다.
-- 4) 데이터베이스의 부하 분석이 어렵다.

-- # 테이블 구조

-- 테이블은 이름을 가지고 있으며, 행(row)과 열(column) 그리고 거기에 대응하는 값을 가집니다.
-- 관계형 데이터베이스는 테이블이 다른 테이블들과 관계를 맺고 모여있는 집합체이다.
-- -> 로우(행)
-- id name age married  ll컬
-- 1  kim   20     false    V럼
-- 2  lee    30     true      (열)
-- 3  park  23     true

-- # 관계형 데이터베이스의 구성 요소.
-- 1) 열(Column) : 사원번호, 성, 이름.. 등 관계된 데이터의 묶음.
-- 2) 행(Row) : 줄, 각각의 열은 유일한 이름을 가지고 있으며 자신만의 타입을 가지고 있다.
-- 3) 테이블 : 데이터들을 행과 열로 표현한 것. 튜플(레코드)의 집합. 릴레이션(Relation)이라고도 한다.
-- 4) 튜플(Tuple) : 레코드(Record)라고도 부르며 테이블의 행(Row)을 구성하는 개체.
-- 5) 속성(Attribute) : 필드(Field)라고도 부르며 테이블의 열(Column)을 구성하는 항목. 데이터베이스를 구성하는 가장 작은 단위.
-- 6) 도메인(Domain) : 하나의 속성에서 취할 수 있는 값의 범위 (성별의 도메인은 남/여)
-- 7) 차수(Degree) : 속성의 개수
-- 8) 기수(Cardinality) : 튜플의 개수
-- 9) 값(Value) : 각각의 행과 열의 타입에 대응되는 값


-- # 키(key)
-- 테이블에서 행의 식별자로 이용되는 열을 키(key) 또는 기본 키(primary key)라고 한다.
-- # KEY의 종류
-- 기본키(Primary Key) : 후보들 중에서 선택한 주요 키. 고유한 식별자로서 속성에 대한 중복을 방지하는 키
-- 후보키(Candidate Key) : ID, 이름 등 튜플을 유일하게 식별하기 위해 사용하는 속성들의 부분집합. 기본키가 될 자격이 있는 속성들
-- 외래키(Foreign Key) : 한 테이블의 속성이 다른 테이블의 기본키가 되는 경우
-- 대체키(Alternate Key) : 후보키 중 기본키를 제외한 나머지 속성


-- # 관계(relationship)
-- 관계형 데이터베이스에서는 관계를 맺기 위해 외래키(Foreign Key)를 이용한다.
-- 테이블 끼리의 관계는 관계를 맺는 테이블의 수에 따라 다음과 같이 나뉜다.
-- 1) 일대일(one-to-one) 관계
-- 2) 일대다(one-to-many) 관계
-- 3) 다대다(many-to-many) 관계

-- # 스키마 : 데이터베이스를 구성하는 개체, 속성, 관계 등 구조에 대한 정의와 이에 대한 제약 조건 등을 기술한 것
-- 외부 스키마 : 일반 사용자나 응용 프로그래머의 관점에서 본 스키마
-- 개념 스키마 : 기관이나 조직체의 관점에서 본 스키마. 접근권한, 보안, 무결성 등에 대한 정의 포함
-- 내부 스키마 : 시스템 프로그래머나 시스템 설계자의 관점에서 본 스키마